@page "/hello"
@using System.Security.Claims
@inject NavigationManager navMan

<div class="d-flex justify-content-xl-center pt-4 mt-3">
</div>
<div class="d-flex justify-content-xl-center pt-5 mt-3">
</div>
<div>
    <div class="text-center my-lg-5">
        <h1 class="display-3">Организуйте вашу жизнь.</h1>
    </div>

    <div class="d-flex justify-content-xl-center pt-5 mt-5">
    </div>
    <div class="d-flex justify-content-xl-center pt-2 mt-5">
    </div>

    <div class="row mt-5">
        <div class="col d-flex justify-content-center">
            <h3 class="text-center" style="width:400px">Скоординируйте вашу деятельность</h3>
        </div>
        <div class="col">
            <h3 class="text-center">Станьте более собранным</h3>
        </div>
        <div class="col d-flex justify-content-center">
            <h3 class="text-center" style="width:400px">Не держите все задачи в голове</h3>
        </div>
    </div>
    <div class="d-flex justify-content-xl-center pt-5 mt-5">
    </div>

    <div class="text-center mt-lg-4" >
        <NavLink @onmouseover="@(() => hover = !hover)" @onmouseout="@(() => hover = !hover)" class="btn btn-outline-primary btn-lg text-center align-middle" style="width:200px; height:50px" href="Identity/Account/Register">
            @btnText
        </NavLink>
    </div>
    
    <div class="text-center" >
        <NavLink  class="text-center align-middle" href="Identity/Account/Login">
            Уже есть аккаунт?
        </NavLink>
    </div>
</div>

@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private bool hover = false;
    private string btnText => hover ? "Пойти в бар" : "Сдать курсач";

    protected async override Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated) navMan.NavigateTo("");
    }
}