@page "/groups"
@using System.Security.Claims
@inject DailyApplication.Controllers.GroupsController _groupsController;

<div class="form-group">
    <label class="control-label">Название</label>
    <input class="form-control" placeholder="Название" @bind=groupName />
    <span class="text-danger"></span>
</div>
<div class="form-group">
    <label class="control-label">Описание</label>
    <input type="textarea" class="form-control" placeholder="Описание" @bind=groupDescription />
    <span class="text-danger"></span>
</div>

<button @onclick=Create>Create</button>

<div>
    @foreach (var group in groups)
    {
        @group.Id;
        <hr />
        @group.Name;
        <hr />
        @group.Description
    }
</div>

@code {
    private string groupName;
    private string groupDescription;

    private void Create ()
    {
        //_groupsController.Create(groupName, groupDescription);

    }

    private List<Group> groups = new();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected async override Task OnInitializedAsync()
    {
        AuthenticationState currentAuth = await authenticationStateTask;
        ClaimsPrincipal currentUser = currentAuth.User;

        groups = _groupsController.GetUserGroups(currentUser);
    }
}